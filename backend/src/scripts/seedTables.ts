import { sequelize } from "../db/sequelize.js";

// Import des mod√®les
import { User } from "../models/User.js";
import { Role } from "../models/Role.js";
import { Permissions } from "../models/Permissions.js";
import { Authors } from "../models/Authors.js";
import { Genre } from "../models/Genre.js";
import { Books } from "../models/Books.js";
import { Library } from "../models/Library.js";
import { ReadingList } from "../models/ReadingList.js";

// Import des services
import { PasswordService } from "../services/PasswordService.js";

// Import des associations
import "../models/association.js";

/**
 * Ce script permet d' ins√©rer des donn√©es de test dans la base de donn√©es
 * Mais il supprime aussi toutes les donn√©es existantes
 */
async function seedTables() {
  try {
    console.log("üöÄ Connexion √† la base de donn√©es...");
    await sequelize.authenticate();
    console.log("‚úÖ Connexion r√©ussie !");

    console.log("üóëÔ∏è  Suppression des donn√©es existantes...");
    // Force sync pour nettoyer et recr√©er les tables
    await sequelize.sync({ force: true });

    console.log("üå± Insertion des donn√©es de test...");

    // === 1. R√îLES ET PERMISSIONS ===
    console.log("   üìù Cr√©ation des r√¥les et permissions...");

    const permissions = await Permissions.bulkCreate([
      { label: "CREATE", action: "Cr√©er du contenu" },
      { label: "READ", action: "Lire le contenu" },
      { label: "UPDATE", action: "Modifier le contenu" },
      { label: "DELETE", action: "Supprimer le contenu" },
      { label: "MODERATE", action: "Mod√©rer le contenu" },
      { label: "ADMIN", action: "Administration syst√®me" },
    ]);

    const roles = await Role.bulkCreate([
      {
        name: "admin",
        description: "Administrateur syst√®me avec tous les droits",
      },
      { name: "moderator", description: "Mod√©rateur pouvant g√©rer le contenu" },
      { name: "user", description: "Utilisateur standard" },
      {
        name: "premium",
        description: "Utilisateur premium avec fonctionnalit√©s avanc√©es",
      },
    ]);

    // === 2. GENRES LITT√âRAIRES ===
    console.log("   üìö Cr√©ation des genres...");

    const genres = await Genre.bulkCreate([
      { name: "Fiction" },
      { name: "Science-fiction" },
      { name: "Fantasy" },
      { name: "Romance" },
      { name: "Thriller" },
      { name: "Mystery" },
      { name: "Biography" },
      { name: "History" },
      { name: "Philosophy" },
      { name: "Non-fiction" },
    ]);

    // === 3. AUTEURS ===
    console.log("   ‚úçÔ∏è  Cr√©ation des auteurs...");

    const authors = await Authors.bulkCreate([
      { firstname: "J.K.", lastname: "Rowling" },
      { firstname: "George", lastname: "Orwell" },
      { firstname: "Agatha", lastname: "Christie" },
      { firstname: "Stephen", lastname: "King" },
      { firstname: "Isaac", lastname: "Asimov" },
      { firstname: "J.R.R.", lastname: "Tolkien" },
      { firstname: "Jane", lastname: "Austen" },
      { firstname: "Victor", lastname: "Hugo" },
      { firstname: null, lastname: "Moli√®re" }, // Certains auteurs n'ont qu'un nom
      { firstname: "Albert", lastname: "Camus" },
    ]);

    // === 4. LIVRES ===
    console.log("   üìñ Cr√©ation des livres...");

    const books = await Books.bulkCreate([
      {
        title: "Harry Potter √† l'√©cole des sorciers",
        isbn: "9782070541270",
        summary:
          "Harry Potter d√©couvre qu'il est un sorcier le jour de ses 11 ans.",
        nb_pages: 320,
        published_at: "1997-06-26",
        image: true,
      },
      {
        title: "1984",
        isbn: "9782070368228",
        summary:
          "Dans un monde totalitaire, Winston Smith remet en question le syst√®me.",
        nb_pages: 408,
        published_at: "1949-06-08",
        image: true,
      },
      {
        title: "Le Seigneur des Anneaux - La Communaut√© de l'Anneau",
        isbn: "9782070612888",
        summary: "Frodon h√©rite d'un anneau magique et doit le d√©truire.",
        nb_pages: 576,
        published_at: "1954-07-29",
        image: true,
      },
      {
        title: "Fondation",
        isbn: "9782070415359",
        summary: "Hari Seldon pr√©dit la chute de l'Empire Galactique.",
        nb_pages: 280,
        published_at: "1951-05-01",
        image: false,
      },
      {
        title: "Les Mis√©rables",
        isbn: "9782070409228",
        summary: "L'histoire de Jean Valjean dans la France du 19e si√®cle.",
        nb_pages: 1488,
        published_at: "1862-04-03",
        image: true,
      },
    ]);

    // === 5. UTILISATEURS ===
    console.log("   üë• Cr√©ation des utilisateurs...");

    // Hashage des mots de passe pour chaque utilisateur
    const adminPassword = await PasswordService.hashPassword("Admin123!");
    const alicePassword = await PasswordService.hashPassword("Alice123!");
    const bobPassword = await PasswordService.hashPassword("Bob123!");
    const claraPassword = await PasswordService.hashPassword("Clara123!");

    const users = await User.bulkCreate([
      {
        firstname: "Admin",
        lastname: "System",
        username: "admin",
        email: "admin@blablabook.com",
        password: adminPassword,
        connected_at: new Date(),
      },
      {
        firstname: "Alice",
        lastname: "Martin",
        username: "alice_books",
        email: "alice@example.com",
        password: alicePassword,
        connected_at: new Date(),
      },
      {
        firstname: "Bob",
        lastname: "Durand",
        username: "bob_reader",
        email: "bob@example.com",
        password: bobPassword,
        connected_at: new Date(),
      },
      {
        firstname: "Clara",
        lastname: "Dubois",
        username: "clara_fantasy",
        email: "clara@example.com",
        password: claraPassword,
        connected_at: new Date(),
      },
    ]);

    // === 6. BIBLIOTH√àQUES ===
    console.log("   üìö Cr√©ation des biblioth√®ques...");

    const libraries = await Library.bulkCreate([
      { name: "Ma biblioth√®que principale" }, // Alice
      { name: "Livres de science-fiction" }, // Alice
      { name: "Mes lectures" }, // Bob
      { name: "Fantasy et magie" }, // Clara
      { name: "Biblioth√®que admin" }, // Admin
    ]);

    // === 7. LISTES DE LECTURE ===
    console.log("   üìù Cr√©ation des listes de lecture...");

    await ReadingList.bulkCreate([
      {
        name: "√Ä lire absolument",
        description: "Ma liste de livres prioritaires",
        genre: "Fiction",
        statut: true,
      },
      {
        name: "Science-fiction classique",
        description: "Les grands classiques du genre",
        genre: "Science-fiction",
        statut: true,
      },
      {
        name: "Fantasy √©pique",
        description: "Pour les amateurs de mondes fantastiques",
        genre: "Fantasy",
        statut: true,
      },
      {
        name: "Livres termin√©s",
        description: "Mes lectures achev√©es",
        genre: null,
        statut: false,
      },
    ]);

    console.log("üéâ Donn√©es de test ins√©r√©es avec succ√®s !");
    console.log("üìä R√©sum√© :");
    console.log(`   ‚Ä¢ ${roles.length} r√¥les cr√©√©s`); //permet de loger les donn√©es ins√©r√©es des roles
    console.log(`   ‚Ä¢ ${permissions.length} permissions cr√©√©es`); //permet de loger les donn√©es ins√©r√©es des permissions
    console.log(`   ‚Ä¢ ${genres.length} genres cr√©√©s`); //permet de loger les donn√©es ins√©r√©es des genres
    console.log(`   ‚Ä¢ ${authors.length} auteurs cr√©√©s`); //permet de loger les donn√©es ins√©r√©es des auteurs
    console.log(`   ‚Ä¢ ${books.length} livres cr√©√©s`); //permet de loger les donn√©es ins√©r√©es des livres
    console.log(`   ‚Ä¢ ${users.length} utilisateurs cr√©√©s`); //permet de loger les donn√©es ins√©r√©es des utilisateurs
    console.log(`   ‚Ä¢ ${libraries.length} biblioth√®ques cr√©√©es`); //permet de loger les donn√©es ins√©r√©es des bibliotheques
  } catch (error) {
    console.error("‚ùå Erreur lors de l'insertion des donn√©es :", error);
  } finally {
    await sequelize.close();
    console.log("üîí Connexion ferm√©e.");
  }
}

// Ex√©cution du script
seedTables();
