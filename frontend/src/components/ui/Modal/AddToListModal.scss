@use '../../../styles/Variables/_variables.scss' as vars;
@use '../../../styles/Mixins/mixins.scss' as mixins;

.add-to-list-modal {
  .book-preview {
    @include mixins.flex-center(flex-start, center, vars.$gap-md);
    padding: vars.$gap-lg;
    background: rgba(vars.$primary-color, 0.05);
    border-radius: vars.$border-radius-md;
    margin-bottom: vars.$gap-xl;

    &__cover {
      width: 60px;
      height: 90px;
      object-fit: cover;
      border-radius: vars.$border-radius-sm;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    }

    &__info {
      flex: 1;

      .book-title {
        font-size: 1.1rem;
        font-weight: bold;
        color: vars.$brown-color;
        margin-bottom: vars.$gap-sm;
        line-height: 1.3;
      }

      .book-authors {
        color: vars.$text-color;
        margin-bottom: vars.$gap-sm;
        font-size: vars.$font-size-sm;
      }

      .book-year {
        color: vars.$text-color;
        font-size: 0.8rem;
        margin: 0;
      }
    }
  }

  .list-selection {
    margin-bottom: vars.$gap-xl;

    h4 {
      color: vars.$brown-color;
      margin-bottom: vars.$gap-lg;
      font-size: 1.1rem;
    }

    .no-lists {
      text-align: center;
      padding: vars.$gap-xl;
      color: vars.$text-color;

      p {
        margin-bottom: vars.$gap-lg;
        font-size: vars.$font-size-lg;
      }

      .create-list-btn {
        @include mixins.button(primary);
        padding: vars.$gap-md vars.$gap-xl;
      }
    }

    .lists-grid {
      display: grid;
      gap: vars.$gap-md;
      max-height: 300px;
      overflow-y: auto;

      .list-option {
        @include mixins.flex-center(space-between, center);
        padding: vars.$gap-md;
        border: 2px solid rgba(vars.$primary-color, 0.2);
        border-radius: vars.$border-radius-md;
        cursor: pointer;
        transition: vars.$transition-fast;
        background: vars.$white;

        &:hover {
          border-color: vars.$primary-color;
          background: rgba(vars.$primary-color, 0.05);
        }

        &.selected {
          border-color: vars.$primary-color;
          background: rgba(vars.$primary-color, 0.1);
          box-shadow: 0 0 0 2px rgba(vars.$primary-color, 0.2);

          .list-name {
            color: vars.$brown-color;
          }
        }

        &__info {
          flex: 1;

          .list-name {
            font-weight: 600;
            color: vars.$brown-color;
            margin-bottom: vars.$gap-sm;
            font-size: vars.$font-size-sm;
          }

          .list-description {
            font-size: 0.8rem;
            color: vars.$text-color;
            line-height: 1.3;
            margin-bottom: vars.$gap-sm;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
          }

          .list-status {
            font-size: 0.75rem;
            padding: 0.2rem 0.5rem;
            border-radius: 12px;
            background: rgba(vars.$primary-color, 0.1);
            color: rgba(vars.$primary-color, 0.8);
          }
        }

        &__radio {
          margin-left: vars.$gap-md;

          input[type='radio'] {
            width: 18px;
            height: 18px;
            accent-color: vars.$primary-color;
          }
        }
      }
    }
  }

  .modal-actions {
    @include mixins.flex-center(flex-end, center, vars.$gap-md);
    padding-top: vars.$gap-lg;
    border-top: 1px solid rgba(vars.$gray-dark, 0.1);
    margin-top: vars.$gap-lg;

    .btn {
      padding: vars.$gap-md vars.$gap-lg;
      border-radius: vars.$border-radius-sm;
      font-weight: 600;
      cursor: pointer;
      transition: vars.$transition-fast;
      border: none;
      font-size: vars.$font-size-sm;

      &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;

        &:hover {
          transform: none;
        }
      }

      &--secondary {
        background: none;
        color: vars.$text-color;
        border: 2px solid rgba(vars.$gray-dark, 0.2);

        &:hover:not(:disabled) {
          background: rgba(vars.$gray-dark, 0.05);
          border-color: vars.$gray-dark;
          color: vars.$gray-dark;
        }
      }

      &--primary {
        @include mixins.button(primary);
      }
    }

    @include mixins.mobile {
      flex-direction: column;

      .btn {
        width: 100%;
      }
    }
  }
}
