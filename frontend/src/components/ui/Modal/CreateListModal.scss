@use '../../../styles/Variables/_variables' as vars;
@use '../../../styles/Mixins/_mixins.scss' as mixins;

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  @include mixins.flex-center;
  z-index: 1000;
  animation: fadeIn 0.2s ease-out;
}

.modal-content {
  background: vars.$white;
  border-radius: vars.$border-radius-md;
  width: 90%;
  max-width: 500px;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  animation: slideIn 0.3s ease-out;
}

.modal-header {
  @include mixins.flex-center(space-between, center);
  padding: vars.$gap-xl;
  border-bottom: 1px solid rgba(vars.$gray-dark, 0.1);

  h2 {
    font-size: 1.5rem;
    color: vars.$brown-color;
    margin: 0;
    font-weight: bold;
  }

  .modal-close-btn {
    background: none;
    border: none;
    font-size: 1.5rem;
    color: vars.$text-color;
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 50%;
    transition: vars.$transition-fast;

    &:hover:not(:disabled) {
      background: rgba(vars.$gray-dark, 0.1);
      color: vars.$brown-color;
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  }
}

.modal-form {
  padding: vars.$gap-xl;

  .form-group {
    margin-bottom: vars.$gap-lg;

    label {
      display: block;
      margin-bottom: vars.$gap-sm;
      font-weight: 600;
      color: vars.$brown-color;
      font-size: vars.$font-size-sm;
    }

    input[type='text'],
    textarea {
      width: 100%;
      padding: vars.$gap-md;
      border: 2px solid rgba(vars.$primary-color, 0.2);
      border-radius: vars.$border-radius-sm;
      font-size: vars.$font-size-sm;
      font-family: inherit;
      transition: vars.$transition-fast;
      background: vars.$white;

      &:focus {
        outline: none;
        border-color: vars.$primary-color;
        box-shadow: 0 0 0 3px rgba(vars.$primary-color, 0.1);
      }

      &.error {
        border-color: vars.$brown-color;
      }

      &:disabled {
        background: rgba(vars.$gray-dark, 0.05);
        cursor: not-allowed;
        opacity: 0.7;
      }

      &::placeholder {
        color: vars.$text-color;
      }
    }

    textarea {
      resize: vertical;
      min-height: 80px;
    }

    .error-message {
      display: block;
      color: vars.$brown-color;
      font-size: 0.8rem;
      margin-top: vars.$gap-sm;
      font-weight: 500;
    }
  }
}

.modal-actions {
  @include mixins.flex-center(flex-end, center, vars.$gap-md);
  padding-top: vars.$gap-lg;
  border-top: 1px solid rgba(vars.$gray-dark, 0.1);
  margin-top: vars.$gap-lg;

  .btn-cancel {
    background: none;
    border: 2px solid rgba(vars.$gray-dark, 0.2);
    color: vars.$text-color;
    padding: vars.$gap-md vars.$gap-lg;
    border-radius: vars.$border-radius-sm;
    cursor: pointer;
    font-weight: 600;
    transition: vars.$transition-fast;

    &:hover:not(:disabled) {
      background: rgba(vars.$gray-dark, 0.05);
      border-color: vars.$gray-dark;
      color: vars.$gray-dark;
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  .btn-create {
    @include mixins.button(primary);

    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none;
      box-shadow: none;

      &:hover {
        transform: none;
        box-shadow: none;
      }
    }
  }
}

// Animations
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: scale(0.9) translateY(-20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

// Responsive
@include mixins.mobile {
  .modal-content {
    width: 95%;
    margin: vars.$gap-md;
  }

  .modal-header,
  .modal-form {
    padding: vars.$gap-lg;
  }

  .modal-actions {
    flex-direction: column;

    .btn-cancel,
    .btn-create {
      width: 100%;
    }
  }
}
