@use '../Variables/_variables.scss' as variables;

// Mixin pour les boutons
@mixin button($variant: primary) {
  padding: 0.75rem 1.5rem;
  border-radius: variables.$border-radius-md;
  font-weight: 600;
  font-size: variables.$font-size-sm;
  cursor: pointer;
  backdrop-filter: blur(10px);
  transition: variables.$transition-fast;

  @if $variant == primary {
    background: linear-gradient(135deg, variables.$primary-color, #b8956a);
    color: variables.$white;
    border: none;
    box-shadow: 0 0.25rem 0.5rem rgba(207, 167, 105, 0.3);

    &:hover {
      transform: translateY(-0.125rem);
      box-shadow: 0 0.5rem 1rem rgba(207, 167, 105, 0.4);
    }
  } @else if $variant == outline {
    background: rgba(207, 167, 105, 0.1);
    color: variables.$primary-color;
    border: 0.125rem solid rgba(207, 167, 105, 0.3);

    &:hover {
      background: rgba(207, 167, 105, 0.2);
      transform: translateY(-0.125rem);
      box-shadow: 0 0.5rem 1rem rgba(207, 167, 105, 0.2);
    }
  } @else if $variant == danger {
    background: linear-gradient(135deg, #8b6914, #a0751a);
    color: variables.$white;
    border: none;
    box-shadow: 0 0.25rem 0.5rem rgba(139, 105, 20, 0.3);

    &:hover {
      background: linear-gradient(135deg, #6b4f0f, #805c15);
      transform: translateY(-0.125rem);
      box-shadow: 0 0.5rem 1rem rgba(139, 105, 20, 0.4);
    }
  }
}

// Mixin pour les liens de navigation avec plume
@mixin nav-link {
  text-decoration: none;
  color: variables.$gray-dark;
  font-weight: 500;
  border-radius: variables.$border-radius-sm;
  padding: variables.$gap-sm variables.$gap-md;
  position: relative;
  transition: variables.$transition-fast;
  font-size: 20px;

  &::before {
    content: 'ðŸª¶';
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    opacity: 0;
    transition: variables.$transition-slow;
  }

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 0.125rem;
    background: variables.$primary-color;
    transition: width 0.6s ease 0.2s;
  }

  &:hover {
    &::before {
      opacity: 1;
      left: calc(100% + 0.1rem);
    }

    &::after {
      width: 100%;
    }
  }
}

@mixin flex-center($justify: center, $align: center, $gap: variables.$gap-md) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
}

@mixin tablet {
  @media (max-width: variables.$tablet) {
    @content;
  }
}

@mixin mobile {
  @media (max-width: variables.$mobile) {
    @content;
  }
}

@mixin mobile-only {
  @media (max-width: (variables.$mobile - 1px)) {
    @content;
  }
}
